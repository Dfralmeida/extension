var SM = (function () {
    var my = {};
    my.a1 = function (key) { return localStorage.getItem(key); }
    my.a2 = function (key, value) { return localStorage.setItem(key, value); }
    my.a3 = function () { return localStorage.clear(); }
    return my;
}());
var RM = (function () {
    var my = {};
    var a1 = "http://www.submarinoviagens.com.br/passagens/UIService/Service.svc/", a2 = "SearchGroupedFlightsJSONMinimum", a3 = "GetSearchStatusJSONMinimum", a4 = 616, a5 = "SUBMARINO";
    var a6 = function (a) {
        return JSON.stringify({
            req: {
                PointOfSale: a5,
                SearchData: {
                    SearchMode: 1,
                    AirSearchData: {
                        CityPairsRequest: a.toDate == undefined || a.toDate == null || a.toDate == "" ? [{
                            CiaCodeList: [],
                            NonStop: false,
                            Origin: a.origin,
                            Destination: a.destination,
                            DepartureYear: a.fromDate.split("/")[2],
                            DepartureMonth: a.fromDate.split("/")[1],
                            DepartureDay: a.fromDate.split("/")[0]
                        }] : [{
                            CiaCodeList: [],
                            NonStop: false,
                            Origin: a.origin,
                            Destination: a.destination,
                            DepartureYear: a.fromDate.split("/")[2],
                            DepartureMonth: a.fromDate.split("/")[1],
                            DepartureDay: a.fromDate.split("/")[0]
                        }, {
                            CiaCodeList: [],
                            NonStop: false,
                            Origin: a.destination,
                            Destination: a.origin,
                            DepartureYear: a.toDate.split("/")[2],
                            DepartureMonth: a.toDate.split("/")[1],
                            DepartureDay: a.toDate.split("/")[0]
                        }],
                        NumberADTs: a.adults == undefined ? 1 : a.adults,
                        NumberCHDs: a.children == undefined ? 0 : a.children,
                        NumberINFs: a.babies == undefined ? 0 : a.babies,
                        SearchType: 1,
                        CabinFilter: null
                    },
                    HotelSearchData: null,
                    AttractionSearchData: null,
                    OptimizedSearch: true
                },
                UserSessionId: "",
                AffiliatedId: a4,
                UserBrowser: navigator.userAgent
            }
        });
    }
    var a7 = function (a, b) {
        return JSON.stringify({
            req: {
                SearchId: a,
                PointOfSale: a5,
                UserSessionId: "",
                AffiliatedId: a4,
                UserBrowser: navigator.userAgent
            },
            pullStatusFrom: b
        });
    }
    var a8 = function (n) {
        var isArray = Object.prototype.toString.call(n) === '[object Array]';
        if (isArray && n.length == 2) {
            var t = function (n, i, r) {
                var f, e, u;
                if (!i || n == undefined) return n;
                if (f = i.d || i.e ? [] : {}, e = r[i.i], i.d)
                    for (u = 0; u < n.length; u += 2) f.push({
                        Key: n[u],
                        Value: t(n[u + 1], e, r)
                    });
                else if (i.e)
                    for (u = 0; u < n.length; u++) f.push(t(n[u], e, r));
                else
                    for (u = 0; u < i.p.length; u++) f[i.p[u].n] = t(n[u], r[i.p[u].i], r);
                return f
            };
            return t(n[1], n[0][0], n[0])
        }
        return n
    }
    my.a9 = function (a, b, c, f) {
        var x = new XMLHttpRequest();
        x.open("POST", a1 + (b == null ? a2 : a3), true);
        x.setRequestHeader('Content-type', 'application/json');
        x.onreadystatechange = function () {
            if (x.readyState == 4) {
                var r = JSON.parse(x.responseText);
                if (typeof r == "string") r = a8(JSON.parse(r));
                if (r.Status == 0) { setTimeout(function () { my.a9(null, r.SearchId, r.PullStatusFrom, f); }, 1500);
                } else if (r.Status == 1) {
                    if (f != undefined && typeof f == "function") f(r);
                } else console.log("Error Status");
            }
        }
        x.send(b == null ? a6(a) : a7(b, c));
    }
    return my;
}());
var BG = (function (SM, RM) {
    var my = {};
    var c2 = "genghis";
    var c1 = "submarinoviagens";
    var b9 = function (small, big) {
        return small.split('/').reverse().join('/') < big.split('/').reverse().join('/');
    }
    var b8 = function (p1, p2) {
        return parseFloat(p1.toString().replace(",", ".")) > parseFloat(p2.toString().replace(",", "."));
    }
    var b7 = function (results, key) {
        for (var i = results.length - 1; i >= 0; i--)
            if (results[i].key == key) return i;
        return null;
    }
    var b6 = function (origin, destination, fromDate, toDate, adults, children, babies) {
        if (c1 == "submarinoviagens") {
            if (toDate == undefined || toDate == null || toDate == "") return "http://www.submarinoviagens.com.br/Passagens/selecionarvoo?SomenteIda=true" + "&Origem=" + origin + "&Destino=" + destination + "&Data=" + fromDate + "&NumADT=" + adults + "&NumCHD=" + children + "&NumINF=" + babies + "&utm_source=" + c2;
            return "http://www.submarinoviagens.com.br/Passagens/selecionarvoo?SomenteIda=false" + "&Origem=" + origin + "&Destino=" + destination + "&Data=" + fromDate + "&Origem=" + destination + "&Destino=" + origin + "&Data=" + toDate + "&NumADT=" + adults + "&NumCHD=" + children + "&NumINF=" + babies + "&utm_source=" + c2;
        }
        if (c1 == "decolar") {
            if (toDate == undefined || toDate == null || toDate == "") return "http://www.decolar.com/shop/flights/results/oneway/" + origin + "/" + destination + "/" + fromDate.split('/').reverse().join('-') + "/" + adults + "/" + children + "/" + babies;
            return "http://www.decolar.com/shop/flights/results/roundtrip/" + origin + "/" + destination + "/" + fromDate.split('/').reverse().join('-') + "/" + toDate.split('/').reverse().join('-') + "/" + adults + "/" + children + "/" + babies;
        }
        return undefined;
    }
    var b5 = function (r) {
        var max = 1000000.0;
        var prices = { bestPriceNoStop: max, bestPriceOneStop: max, bestPriceTwoStop: max, byCompany: {} };
        for (var i in r) {
            prices.bestPriceNoStop = Math.min(r[i].Cells[0].Price ? r[i].Cells[0].Price : max, prices.bestPriceNoStop);
            prices.bestPriceOneStop = Math.min(r[i].Cells[1].Price ? r[i].Cells[1].Price : max, prices.bestPriceOneStop);
            prices.bestPriceTwoStop = Math.min(r[i].Cells[2].Price ? r[i].Cells[2].Price : max, prices.bestPriceTwoStop);
            prices.byCompany[r[i].AirCompany.trim()] = [r[i].Cells[0].Price, r[i].Cells[1].Price, r[i].Cells[2].Price];
        }
        if (prices.bestPriceNoStop == max) prices.bestPriceNoStop = "";
        if (prices.bestPriceOneStop == max) prices.bestPriceOneStop = "";
        if (prices.bestPriceTwoStop == max) prices.bestPriceTwoStop = "";
        return prices;
    }
    var b4 = function (r) {
        var companies = JSON.parse(SM.a1("r")).companies;
        if (companies != undefined && companies != null && companies.length > 0) {
            var max = 1000000.0, bestPriceNoStop = max, bestPriceOneStop = max, bestPriceTwoStop = max, byCompany = {};
            for (var i in companies) {
                var prices = r.byCompany[companies[i]];
                if (prices == undefined) continue;
                bestPriceNoStop = Math.min(prices[0] ? prices[0] : max, bestPriceNoStop);
                bestPriceOneStop = Math.min(prices[1] ? prices[1] : max, bestPriceOneStop);
                bestPriceTwoStop = Math.min(prices[2] ? prices[2] : max, bestPriceTwoStop);
                byCompany[companies[i]] = prices;
            }
            r.bestPriceNoStop = bestPriceNoStop == max ? "" : bestPriceNoStop;
            r.bestPriceOneStop = bestPriceOneStop == max ? "" : bestPriceOneStop;
            r.bestPriceTwoStop = bestPriceTwoStop == max ? "" : bestPriceTwoStop;
            r.byCompany = byCompany;
        }
        return r;
    }
    var b3 = function (page, req) {
        var results = my.a1(),
            key = my.a3(page),
            date = my.a4(page);
        var indexForKey = b7(results, key);
        if (indexForKey == null) results.push({
            key: key,
            bestNoStop: {
                date: date,
                price: req.bestPriceNoStop,
                url: page.url
            },
            bestOneStop: {
                date: date,
                price: req.bestPriceOneStop,
                url: page.url
            },
            bestTwoStop: {
                date: date,
                price: req.bestPriceTwoStop,
                url: page.url
            },
            all: [{
                date: date,
                priceNoStop: req.bestPriceNoStop,
                priceOneStop: req.bestPriceOneStop,
                priceTwoStop: req.bestPriceTwoStop,
                url: page.url,
                byCompany: req.byCompany
            }]
        });
        else {
            results[indexForKey].all.push({
                date: date,
                priceNoStop: req.bestPriceNoStop,
                priceOneStop: req.bestPriceOneStop,
                priceTwoStop: req.bestPriceTwoStop,
                url: page.url,
                byCompany: req.byCompany
            });
            if (!b8(req.bestPriceNoStop, results[indexForKey].bestNoStop.price)) results[indexForKey].bestNoStop = {
                date: date,
                price: req.bestPriceNoStop,
                url: page.url
            };
            if (!b8(req.bestPriceOneStop, results[indexForKey].bestOneStop.price)) results[indexForKey].bestOneStop = {
                date: date,
                price: req.bestPriceOneStop,
                url: page.url
            };
            if (!b8(req.bestPriceTwoStop, results[indexForKey].bestTwoStop.price)) results[indexForKey].bestTwoStop = {
                date: date,
                price: req.bestPriceTwoStop,
                url: page.url
            };
        }
        SM.a2("rl", JSON.stringify(results));
        SM.a2("rp", !SM.a1("rp") ? 1 : parseInt(SM.a1("rp")) + 1);
    }
    var b2 = function () {
        chrome.browserAction.setBadgeBackgroundColor({ "color": [220, 0, 0, 255] });
        chrome.browserAction.setBadgeText({ "text": SM.a1("rp") });
    }
    var b1 = function () {
        var p = JSON.parse(SM.a1("p"));
        var o = parseInt(SM.a1("o"));
        if (o >= p.length) return false;
        RM.a9(p[o], null, null, function (r) {
            r = b5(r.PriceMatrix.AirCompanies);
            r = b4(r);
            b3(p[o], r);
            var p1 = chrome.extension.getViews({ type: 'popup' })[0];
            if (p1 != undefined) {
                my.a2();
                p1.a1(p[o], r);
                if (parseInt(SM.a1("rp")) >= p.length) p1.a2();
            } else b2();
        });
        SM.a2("o", o + 1);
        return true;
    }
    my.a1 = function () {
        return !SM.a1("rl") ? [] : JSON.parse(SM.a1("rl"));
    }
    my.a2 = function () {
        chrome.browserAction.setBadgeText({ "text": "" });
    }
    my.a3 = function (page) {
        return page.origin + "-" + page.destination;
    }
    my.a4 = function (page) {
        return page.toDate == undefined || page.toDate == "" ? page.fromDate : page.fromDate + " - " + page.toDate;
    }
    my.a5 = function () {
        return !SM.a1("p") ? [] : JSON.parse(SM.a1("p"));
    }
    my.a6 = function (req) {
        SM.a3();
        var p = [];
        for (var i in req.origins) for (var j in req.destinations) {
            if (req.origins[i] == req.destinations[j]) continue;
            for (var k in req.fromDates) for (var w in req.toDates) {
                if (req.toDates[w] != "" && !b9(req.fromDates[k], req.toDates[w])) continue;
                p.push({
                    url: b6(req.origins[i], req.destinations[j], req.fromDates[k], req.toDates[w], req.adults, req.children, req.babies),
                    origin: req.origins[i],
                    destination: req.destinations[j],
                    fromDate: req.fromDates[k],
                    toDate: req.toDates[w],
                    adults: req.adults,
                    children: req.children,
                    babies: req.babies
                });
            }
        }
        SM.a2("r", JSON.stringify(req));
        SM.a2("p", JSON.stringify(p));
        SM.a2("o", 0);
        var checkInterval = setInterval(function () {
            if (!b1()) clearInterval(checkInterval);
        }, 307);
    }
    return my;
}(SM, RM));